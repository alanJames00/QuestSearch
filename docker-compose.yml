version: "3.8"
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongo_config:/data/configdb
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"] # disable auth
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      retries: 30
    networks:
      - backend

  mongo-importer:
    image: mongo:latest
    container_name: mongo-importer
    depends_on:
      - mongodb
    volumes:
      - ./data:/data
    entrypoint: >
      /bin/sh -c "
        apt-get update && apt-get install -y netcat-traditional && \
        while ! nc -z mongodb 27017; do
          echo 'Waiting for MongoDB to start...';
          sleep 2;
        done;

        mongoimport --host mongodb --db=questsearch --collection=questions --file=/data/questions.json --jsonArray --stopOnError;
        exit 0;"
    networks:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - MONGO_URI=mongodb://mongodb:27017/questsearch?directConnection=true
      - DB_NAME=questsearch
    ports:
      - "8787:8787"
    networks:
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    environment:
      - REACT_APP_ALGOLIA_APP_ID="GBEPVZDMJO"
      - REACT_APP_ALGOLIA_API_KEY="e7903eaedaa134e850fe787e138ad840"
      - REACT_APP_GRPC_PROXY_HOST="https://quest-proxy.alanjames.live"

    ports:
      - "3000:3000"
    networks:
      - backend

  # envoy proxy server service
  envoy:
    image: envoyproxy/envoy:v1.22.0
    container_name: envoy
    depends_on:
      - backend
    ports:
      - "8080:8080"
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  mongodb_data:

  mongo_config:
